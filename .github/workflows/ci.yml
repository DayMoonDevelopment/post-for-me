name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.20
      - run: bun install
      - run: bun run lint

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.20
      - run: bun install
      - run: bun run typecheck

  deploy-dashboard-preview:
    name: Deploy Dashboard Preview
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    if: always()
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v2
      - run: bun install

      - name: Check for Supabase migrations
        id: check_migrations
        run: |
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -q "^supabase/migrations/"; then
            echo "has-migrations=true" >> $GITHUB_OUTPUT
          else
            echo "has-migrations=false" >> $GITHUB_OUTPUT
          fi

      - name: Link repo to Vercel project
        if: steps.check_migrations.outputs.has-migrations == 'false'
        run: bunx vercel link --project post-for-me-app --scope day-moon --token=$VERCEL_TOKEN --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Pull Vercel environment
        if: steps.check_migrations.outputs.has-migrations == 'false'
        run: bunx vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Build
        if: steps.check_migrations.outputs.has-migrations == 'false'
        run: bunx vercel build --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy
        if: steps.check_migrations.outputs.has-migrations == 'false'
        id: deploy
        run: |
          URL=$(bunx vercel deploy --prebuilt --token=$VERCEL_TOKEN)
          echo "url=$URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Generate dashboard preview snippet
        run: |
          DEPLOY_STATUS="${{ steps.deploy.outcome }}"
          PREVIEW_URL="${{ steps.deploy.outputs.url }}"
          STATUS="⏳"
          LINK="—"

          if [ "$DEPLOY_STATUS" = "success" ]; then
            STATUS="✅"
            LINK="[Preview]($PREVIEW_URL)"
          elif [ "$DEPLOY_STATUS" = "failure" ]; then
            STATUS="❌"
          fi

          echo "| Dashboard | $STATUS | $LINK |" > dashboard-preview.md

      - name: Upload dashboard preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: dashboard-preview
          path: dashboard-preview.md

  deploy-marketing-preview:
    name: Deploy Marketing Preview
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    if: always()
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v2
      - run: bun install

      - name: Link repo to Vercel project
        run: bunx vercel link --project post-for-me-marketing --scope day-moon --token=$VERCEL_TOKEN --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Pull Vercel environment
        run: bunx vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Build
        run: bunx vercel build --token=$VERCEL_TOKEN
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy
        id: deploy
        run: |
          URL=$(bunx vercel deploy --prebuilt --token=$VERCEL_TOKEN)
          echo "url=$URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Generate marketing preview snippet
        run: |
          DEPLOY_STATUS="${{ steps.deploy.outcome }}"
          PREVIEW_URL="${{ steps.deploy.outputs.url }}"
          STATUS="⏳"
          LINK="—"

          if [ "$DEPLOY_STATUS" = "success" ]; then
            STATUS="✅"
            LINK="[Preview]($PREVIEW_URL)"
          elif [ "$DEPLOY_STATUS" = "failure" ]; then
            STATUS="❌"
          fi

          echo "| Marketing | $STATUS | $LINK |" > marketing-preview.md

      - name: Upload marketing preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: marketing-preview
          path: marketing-preview.md
